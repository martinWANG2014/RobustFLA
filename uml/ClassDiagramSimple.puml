@startuml

class Input{
    -String sAirportPath
    -String sWayPointPath
    -String sFlightPath
}
class Network{
    -FlightsVector vpFlightsList
    -AirportsVector vpAirportsList
    -WayPointsVector vpWayPointsList
    -LevelVector viFlightLevelsList
}
class Position{
    -double dLatitude
    -double dLongitude
}
class Node{
    -String sCode
    -String  sName
    -Position position
}
class Flight{
    -String sCode
    -Airport *pAOrigin
    -Airport *pADestination
    -Time dDepartureTime
    -Level iCurrentLevel
    -LevelVector viFeasibleLevelList
    -Route *pRoute
    -double dSigma
    -double dCoefPi
}
class Point{
    -WayPoint *pWayPoint
    -Time iArrivingTime
}
class Route{
    -Level iDefaultLevel
    -PointVector vpPointsList
    -vdList vdTimeList
}

class Solver{
    -IloEnv env
    -IloModel model
    -IloCplex solver
    -IloNumVarArray decisionVariables
    -IloNumArray decisionVariablesValues
    -IloExpr functionObjective
    -double dFunctionObjectiveValue
}

class ProcessClock{
    -ProcessTime oStartTime
    -ProcessTime oEndTime
    -double dUserTime
    -double dSysTime
    -double dCreateTime
    -double dExitTime
    -double dCpuTime
}
Route *-l- Point
Point *-->Node:(WayPoint)
Flight *-->Route
Flight *-->Node:(Airport)
Node *-->Position
Input -->Network
Network o--Flight
Network o-l-Node:(Airport)
Network o--Node:(WayPoint)
Main -->Solution
Main -->Input
Main -->Network
Solution -->Network
Solution -->Solver
Solution -->ProcessClock
@enduml